version: '3.8'

services:
  # TerraForge Studio main application
  terraforge:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: terraforge-studio
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - LOG_LEVEL=info
      - CACHE_DIR=/app/cache
      - OUTPUT_DIR=/app/output
      # Optional: Add your API keys here or use .env file
      # - OPENTOPOGRAPHY_API_KEY=${OPENTOPOGRAPHY_API_KEY}
      # - OLLAMA_HOST=${OLLAMA_HOST:-http://host.docker.internal:11434}
    volumes:
      - terraforge_cache:/app/cache
      - terraforge_output:/app/output
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - terraforge-network

  # Nginx reverse proxy (optional, for production)
  nginx:
    image: nginx:alpine
    container_name: terraforge-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl:ro
    depends_on:
      - terraforge
    restart: unless-stopped
    networks:
      - terraforge-network
    # Comment out if not using SSL
    # environment:
    #   - SSL_CERT_PATH=/etc/ssl/cert.pem
    #   - SSL_KEY_PATH=/etc/ssl/key.pem

  # Redis for caching and queue management (optional, for batch processing)
  redis:
    image: redis:7-alpine
    container_name: terraforge-redis
    ports:
      - "6379:6379"
    volumes:
      - terraforge_redis:/data
    restart: unless-stopped
    networks:
      - terraforge-network
    command: redis-server --appendonly yes

volumes:
  terraforge_cache:
    driver: local
  terraforge_output:
    driver: local
  terraforge_redis:
    driver: local

networks:
  terraforge-network:
    driver: bridge

