# .github/workflows/python-ci.yml
# CI for Python packages: install deps, lint, test, and upload reports.

name: Python CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: python-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          # If you pin deps in lockfiles, list them here for smarter cache keys:
          cache-dependency-path: |
            requirements*.txt
            pyproject.toml
            poetry.lock
            setup.cfg
            setup.py

      - name: Upgrade pip tooling
        run: |
          python -m pip install --upgrade pip setuptools wheel

      - name: Install dependencies
        run: |
          # Dev tools
          python -m pip install flake8 pytest pytest-cov
          # Project deps (support both requirements and pyproject flows)
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          if [ -f pyproject.toml ]; then
            # If using PEP 517 builds / pyproject, try installing the project
            pip install -e .
          fi

      - name: Lint with flake8
        run: |
          # Fail on syntax/undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # Treat style issues as warnings, keep CI green but informative
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run tests with coverage
        run: |
          mkdir -p reports
          pytest -q --maxfail=1 --disable-warnings \
                 --cov=. --cov-report=term-missing \
                 --junitxml=reports/junit.xml \
                 --cov-report=xml:reports/coverage.xml

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports-py${{ matrix.python-version }}
          path: reports/
          if-no-files-found: ignore
