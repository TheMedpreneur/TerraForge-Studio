name: Build Multi-Platform Releases

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build-windows:
    name: Build Windows (Portable + Installer)
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r desktop/desktop_requirements.txt
          
      - name: Build Frontend
        working-directory: frontend-new
        run: |
          npm install
          npm run build
          
      - name: Build Portable
        run: python desktop/build.py
        
      - name: Create Portable ZIP
        run: |
          $version = "${{ github.ref_name }}"
          Compress-Archive -Path "desktop/dist/TerraForge Studio" -DestinationPath "TerraForge-Studio-$version-Windows-Portable.zip"
        shell: pwsh
        
      - name: Install Inno Setup
        run: |
          choco install innosetup -y
          
      - name: Build Installer
        run: |
          & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" desktop/installer.iss
        shell: pwsh
        
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-builds
          path: |
            TerraForge-Studio-*.zip
            desktop/installer_output/*.exe
            
  build-linux:
    name: Build Linux AppImage
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgirepository1.0-dev libcairo2-dev python3-gi
          
      - name: Build
        run: |
          chmod +x desktop/build_linux.sh
          ./desktop/build_linux.sh
          
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-builds
          path: TerraForge-Studio-*.AppImage
          
  build-macos:
    name: Build macOS
    runs-on: macos-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Build
        run: |
          chmod +x desktop/build_macos.sh
          ./desktop/build_macos.sh
          
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-builds
          path: TerraForge-Studio-*.dmg
          
  create-release:
    name: Create GitHub Release
    needs: [build-windows, build-linux, build-macos]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Calculate checksums
        run: |
          cd windows-builds && sha256sum * > checksums.txt && cd ..
          cd linux-builds && sha256sum * > checksums.txt && cd ..
          cd macos-builds && sha256sum * > checksums.txt && cd ..
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            windows-builds/*
            linux-builds/*
            macos-builds/*
          body: |
            # TerraForge Studio ${{ github.ref_name }}
            
            ## Downloads
            
            ### Windows
            - **Portable:** `TerraForge-Studio-${{ github.ref_name }}-Windows-Portable.zip`
            - **Installer:** `TerraForge-Studio-Setup-${{ github.ref_name }}.exe`
            
            ### Linux
            - **AppImage:** `TerraForge-Studio-${{ github.ref_name }}-Linux-x86_64.AppImage`
            
            ### macOS
            - **DMG:** `TerraForge-Studio-${{ github.ref_name }}-macOS.dmg`
            
            ## Installation
            
            - **Windows Portable:** Extract ZIP and run `TerraForge Studio.exe`
            - **Windows Installer:** Run `.exe` installer
            - **Linux:** Make AppImage executable: `chmod +x *.AppImage`, then run
            - **macOS:** Open DMG and drag to Applications
            
            ## System Requirements
            - Windows 10/11, Linux (Ubuntu 20.04+), or macOS 10.13+
            - 4GB RAM minimum (8GB recommended)
            - 500MB free disk space
            
            ## Checksums
            See `checksums.txt` in each platform's artifacts
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
